Cross correlate allows for comparing the extensions of multiple FITS files,
or comparing the $O$- and $E$-beams of a single FITS file.

Parameters
----------
data_dir : str | Path
    The path to the data to be cross correlated
filenames : list[str]
    The ecwmxgbp*.fits files to be cross correlated.
    If only one filename is defined, correlation is done against the two polarization beams.
split_ccd : bool, optional
    Decides whether the CCD regions should each be individually cross correlated.
    (The default is True, which splits the spectrum up into its separate CCD regions)
cont_ord : int, optional
    The degree of a chebyshev to fit to the continuum.
    (The default is 11)
plot : bool, optional
    Decides whether the continuum fitting should be plotted
    (The default is False, so no continua plots are displayed)
save_prefix : str, optional
    The name or directory to save the figure produced to. "." saves a default name to the current working.
    A default name is also used when save_prefix is a directory.
    (The default is None, i.e., The figure is not saved, only displayed)

Attributes
----------
data_dir
fits_list
beams : str
    The mode of correlation. 'OE' for same file, and 'O' or 'E' for different files but same extension.
ccds : int
    The number of CCD's in the data. Used to split the CCD's if split_ccd is True.
cont_ord : int
    The degree of the chebyshev to fit to the continuum.
can_plot : bool
    Decides whether the continuum fitting should be plotted
offset : int, DEPRECATED
    The amount the spectrum is shifted, mainly to test the effect of the cross correlation.
    (The default is 0, i.e., no offset introduced)
save_prefix
wav_unit : str
    The units of the wavelength axis.
    (The default is Angstroms)
wav_cdelt : int
    The wavelength increment.
    (The default is 1)
alt : Callable
    An alternate method of cross correlating the data.
    (The default is None)

Methods
-------
load_file(filename: Path) -> tuple[np.ndarray, np.ndarray, np.ndarray]
    Loads the data from a FITS file.
get_bounds(bpm: np.ndarray) -> np.ndarray
    Finds the bounds for the CCD regions.
remove_cont(spec: list, wav: list, bpm: list, plot_cont: bool) -> None
    Removes the continuum from the data.
correlate(filename1: Path, filename2: Path | None = None) -> None
    Cross correlates the data.
ftcs(filename1: Path, filename2: Path | None = None) -> None
    Cross correlates the data using the Fourier Transform.
plot(spec, wav, bpm, corrdb, lagsdb) -> None
    Plots the data.
process() -> None
    Processes the data.

Other Parameters
----------------
offset : int, optional
    The amount the spectrum is shifted, mainly to test the effect of the cross correlation.
    (The default is 0, i.e., no offset introduced)
**kwargs : dict
    keyword arguments.
    Allows for passing unpacked dictionary to the class constructor.
    ftcs : bool, optional
        Boolean whether to use Fourier Transform for cross correlation.

See Also
--------
scipy - correlation:
    https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.correlate.html
        
matplotlib custom style:
    https://matplotlib.org/stable/users/explain/customizing.html

Notes
-----
Constants Imported (See utils.Constants):
    SAVE_CORR:
        The default save name for the correlation plot.
    OFFSET:
        The vertical offset of spectra in the output plot.